package frames;

import items.Item;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Timer;
import models.SpecialVendingMachine;

/**
 * The CheckoutFrame Class displays preparation messages and dispenses item to user
 * @author LIM, Theoni Anne
 *         TELOSA, Arwyn Gabrielle
 * @version 1.0
 * @since 07-22-2023
 */
public class CheckoutFrame extends javax.swing.JFrame {

    private MainFrame sourceFrame;
    private SpecialVendingMachine vendingMachine;
    private Timer timer;
    
    /**
     * The CheckoutFrame method initializes a new CheckoutFrame with the given source frame and vending machine.
     *
     * @param sourceFrame reference to main frame
     * @param vendingMachine current instance of vending machine
     */
    public CheckoutFrame(MainFrame sourceFrame, SpecialVendingMachine vendingMachine) {
        this.sourceFrame = sourceFrame;
        this.vendingMachine = vendingMachine;
        initComponents();
        ArrayList<String> messages = getMessages();
        timer = new Timer(1000, new ActionListener(){
            @Override
            /**
             * Handles the action event triggered by a UI component.
             * 
             * @param evt the action event that was triggered
             */      
            public void actionPerformed(ActionEvent e) {
                if (!messages.isEmpty()) {
                    textArea.append(messages.remove(0) + "\n");
                } else {
                    textArea.append("Burger is finished! Enjoy your Custom Burger!\n");
                    vendingMachine.dispenseItems();
                    finish.setEnabled(true);
                    timer.stop();

                }
            }
        });
        timer.start();
    }

    /**
     * The getMessages method retrieves messages associated with the selected patties and toppings from the vending machine.
     *
     * @return a list of messages reflecting the user's selection of items.
     */    
    private ArrayList<String> getMessages(){
        ArrayList<String> messages = new ArrayList<>();
        
        for (String patty : vendingMachine.getSelectedPatties().keySet())
            messages.add(vendingMachine.getItems().get(patty).get(0).getMessage());
        
        messages.add(vendingMachine.getItems().get("Buns").get(0).getMessage());
        for (String toppingName : vendingMachine.getSelectedToppings().keySet()){
            if (vendingMachine.getSelectedToppings().get(toppingName) != 0) 
                messages.add(vendingMachine.getItems().get(toppingName).get(0).getMessage());
        }
        return messages;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        finish = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Checkout");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Your order:");

         /**
         * Handles the action event triggered by a UI component.
         * 
         * @param evt the action event that was triggered
         */      
        finish.setText("Finish");
        finish.setEnabled(false);
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane2.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(finish)))
                        .addGap(0, 151, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(finish)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the finish action event by disposing the current frame and making the source frame visible.
     * 
     * @param evt the action event triggered by the finish action.
     */  
    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        // TODO add your handling code here:
        dispose();
        sourceFrame.setVisible(true);
    }//GEN-LAST:event_finishActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton finish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
